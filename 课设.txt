#include <stdio.h>//饿了么外卖平台
void main_munu() {
	//打印主菜单
	char a[6][20] = { "菜单","凉菜","热销菜","主食","饭后甜点","饮料" };
	int i;
	printf("%s\n", a[0]);
	for (i = 1; i < 6; i++)
	{
		printf("\t%d.%s\n", i, a[i]);
	}
	printf("\t0.点餐结束\n");
}

void menu_liangcai() {
	//凉菜类打印
	char a[3][20] = { "木耳辣根\t12元","姜汁皮蛋\t15元","肉丝苦菊\t13元" };//定义字符数组，存放菜名
	printf("请具体选择菜品：\n");
	for (int i = 0; i < 3; i++) {
		printf("\t\t%d.%s\n", i + 1, a[i]);
	}
	printf("\t\t0.返回上层菜单\n");
}

void menu_rexiao() {
	//热销菜打印
	char a[3][20] = { "葱烧排骨\t25元","麻婆豆腐\t20元","香辣小河虾\t30元" };//定义字符数组，存放菜名
	printf("请具体选择菜品：\n");
	for (int i = 0; i < 3; i++) {
		printf("\t\t%d.%s\n", i + 1, a[i]);
	}
	printf("\t\t0.返回上层菜单\n");
}

void menu_zhushi() {
	// 主食类打印
	char a[3][20] = { "香肠焖饭\t5元","海鲜炒面\t5元","玉米馒头\t10元" };//定义字符数组，存放菜名
	printf("请具体选择菜品：\n");
	for (int i = 0; i < 3; i++) {
		printf("\t\t%d.%s\n", i + 1, a[i]);
	}
	printf("\t\t0.返回上层菜单\n");
}

void menu_tiandian() {
	//甜点类打印
	char a[3][20] = { "草莓冰淇淋\t6元","懒人布丁\t5元","香橙果冻\t3元" };//定义字符数组，存放菜名
	printf("请具体选择菜品：\n");
	for (int i = 0; i < 3; i++) {
		printf("\t\t%d.%s\n", i + 1, a[i]);
	}
	printf("\t\t0.返回上层菜单\n");
}

void menu_yinliao() {
	//饮料类打印
	char a[3][20] = { "倾橙汁恋\t3元","可口可乐\t4元","秘制凉茶\t5元" };//定义字符数组，存放菜名
	printf("请具体选择菜品：\n");
	for (int i = 0; i < 3; i++) {
		printf("\t\t%d.%s\n", i + 1, a[i]);
	}
	printf("\t\t0.返回上层菜单\n");
}

int main(int argc, const char * argv[]) 
{
	int t;
	char shop[6][20] = { "法克招牌快餐店1","法克招牌快餐店2","法克招牌快餐店3","法克招牌快餐店4","法克招牌快餐店5","法克招牌快餐店6" };
	printf("*****饿了么外卖服务平台*****\n");
	printf(" ***** 欢迎您点餐 *****\n");
	printf("店铺\n");
	for (int i = 0; i < 6; i++)
	{
		printf("\t%d.%s", i+1,shop[i]);
		if(i%2==1&&i!=0)
			printf("\n");
	}
	printf(" ****—————————————————————————****\n");
	scanf_s("%d",&t);
	printf("***** %s *****\n",shop[t-1]);
	printf(" ***** 欢迎您点餐 *****\n");
	int M;//定义用户选择的分类代号为M；
	int n;//定义用户输入子菜单下的菜品代号为n；
	int x[5][3] = { 0 };//定义每类菜品被点数量
	int price1[5][3] = { 0 };//每种菜品的价格总价
	int price[5][3] = { {12,15,13},{25,20,30},{5,5,10},{6,5,3},{3,4,5} };//定义每样菜品单价
	int total = 0;//定义所有菜品总价 初始化为0；
	char name[5][3][20] = { {"木耳辣根","姜汁皮蛋","肉丝苦菊"},{"葱烧排骨","麻婆豆腐","香辣小河虾"},{"香肠焖饭","海鲜炒面","玉米馒头"},{"草莓冰淇淋","懒人布丁","香橙果冻"},{"倾橙汁恋","可口可乐","秘制凉茶"} };
	while (1) {
		main_munu();
		scanf_s("%d", &M);//接收用户输入的菜品分类代号
		if (M == 0) {
			break;
		}
		switch (M) {
		case 1:
		{
			menu_liangcai();
			while (1) {
				scanf_s("%d", &n);
				if (n == 0) {
					//如果输入为0，跳出循环（程序中表现为：跳出本菜单下的菜品选择）；
					break;
				}
				//统计 每样菜品总价格 与被点次数
				price1[0][n - 1] += price[0][n - 1];
				x[0][n - 1] ++;
			}
		}
		if (n == 0)break;//如果输入为0，结束选菜；
		case 2:
		{
			menu_rexiao();
			while (1) {
				scanf_s("%d", &n);
				if (n == 0) {
					//如果输入为0，跳出循环（程序中表现为：跳出本菜单下的菜品选择）；
					break;
				}
				price1[1][n - 1] += price[1][n - 1];
				x[1][n - 1]++;
			}
		}
		if (n == 0)break;//如果输入为0，结束选菜；
		case 3:
		{
			menu_zhushi();
			while (1) {
				scanf_s("%d", &n);
				if (n == 0) {
					//如果输入为0，跳出循环（程序中表现为：跳出本菜单下的菜品选择）；
					break;
				}
				price1[2][n - 1] += price[2][n - 1];
				x[2][n - 1]++;
			}
		}
		if (n == 0)break;//如果输入为0，结束选菜；
		case 4:
		{
			menu_tiandian();
			while (1) {
				scanf_s("%d", &n);
				if (n == 0) 
				{
					//如果输入为0，跳出循环（程序中表现为：跳出本菜单下的菜品选择）；
					break;
				}
				price1[3][n - 1] += price[3][n - 1];
				x[3][n - 1]++;
			}
		}
		if (n == 0)break;//如果输入为0，结束选菜；
		case 5:
		{
			menu_yinliao();
			while (1) {
				scanf_s("%d", &n);
				if (n == 0) {
					//如果输入为0，跳出循环（程序中表现为：跳出本菜单下的菜品选择）；
					break;
				}
				price1[4][n - 1] += price[4][n - 1];
				x[4][n - 1]++;
			}
		}

		if (n == 0)break;//如果输入为0，结束选菜；
		}

	}

	//打印相关信息
	printf("菜名\t\t\t单价（元）\t数量\t总价格（元）\n-----------------------------------\n");
	for (int i = 0; i < 5; i++) {
		for (int j = 0; j < 3; j++) {
			if (price1[i][j] != 0) {//用价格判断顾客是否选择 确认打印
				printf("%s\t\t%3d\t\t%3d\t%3d\n", name[i][j], price[i][j], x[i][j], price1[i][j]);
				total += price1[i][j];//计算总价格
			}
		}
	}
	printf("总价格：\t\t\t\t\t%3d\n", total);
	printf("祝您用餐愉快，期待您的下次光临！\n");
	return 0;
}

//打地鼠
/*#include <stdio.h>
#include <windows.h>//goto_xy
#include <stdlib.h>//rand()  system
#include <time.h>//rand()  Sleep
#include <conio.h> //消除press any key to continued


void goto_xy(int x, int y)//定位光标位置到指定坐标
{
	HANDLE hOut;
	hOut = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD pos = { x,y };//COORD是一个结构体，表示一个坐标
	SetConsoleCursorPosition(hOut, pos);//SetConsoleCursorPosition是一个实现光标的位置控制的计算机函数。它的两个参数为
	//（光标句柄，COORD的结构体） 作用是将光标句柄，移动到COORD指向的位置。
}


void create(int mousex, int mousey, int hp, int score)//画格子及地鼠及hp,score
{
	printf(" 左上角为1 1;右上角为4 1;左下角为1 4;右下角为4 4;\n");
	printf("---------------------------------\n");
	printf("|       |       |       |       |\n");
	printf("---------------------------------\n");
	printf("|       |       |       |       |\n");
	printf("---------------------------------\n");
	printf("|       |       |       |       |\n");
	printf("---------------------------------\n");
	printf("|       |       |       |       |\n");
	printf("---------------------------------\n");
	goto_xy(mousex, mousey);
	printf("^(@_@)^");
	goto_xy(40, 1);
	printf("hp=%d", hp);
	goto_xy(40, 2);
	printf("score=%d", score);
}

void over(int score)
{
	int a;
	goto_xy(20, 6);
	printf("game over!\n");
	goto_xy(18, 7);
	printf("your score is %d\n", score);
	a = score / 10;
	switch (a)
	{
	case 0:
		goto_xy(20, 8);
		printf("再接再厉哦！");
		break;
	case 1:
		goto_xy(20, 8);
		printf("小有成绩！");
		break;
	case 2:
	case 3:
	case 4:
	case 5:
		goto_xy(20, 8);
		printf("干得不错！");
		break;
	case 6:
	case 7:
	case 8:
	case 9:
		goto_xy(20, 8);
		printf("超级棒哦！");
		break;
	default:
		goto_xy(16, 8);
		printf("你也太厉害了！！！！(⊙o⊙)");
	}
	_getch(); //消除press any key to continued
}

int main()
{
	void goto_xy(int x, int y);
	void create(int mousex, int mousey, int hp, int score);
	system("mode con cols=60 lines=15");//这句命令的意思是设置控制台大小，cols为控制台的宽度，lines则代表控制台的高度。
	int mousex, mousey, hang, lie, x, y, hp, score, t, a=3000,f;
	score = 0;
	goto_xy(16, 6);
	printf("请输入你想要的生命值:");
	scanf_s("%d", &hp);
	if (hp <= 0)
	{
		printf("请输入一个正值作为你游戏的生命值:");
		scanf_s("%d", &hp);
		system("cls");
	}
	else
		system("cls");
	goto_xy(40, 1);
	printf("hp=%d", hp);
	goto_xy(40, 2);
	printf("score=%d", score);
	for (; hp > 0;)
	{
		goto_xy(0, 0);
		srand((unsigned)time(NULL));//随机函数
		hang = rand() % 4 + 1;
		lie = rand() % 4 + 1;
		mousex = 8 * hang - 7;
		mousey = 2 * lie;
		a = a / 1.001;
		create(mousex, mousey, hp, score);
		goto_xy(1, 10);
		printf("please enter two numbers:");
		Sleep(a);
		if (_kbhit())
		{
			scanf_s("%d", &f);
			x = f/10;
			y = f%10;
			if (x == hang && y == lie)
			{
				goto_xy(mousex, mousey);
				printf(" good  ");
				t = 1;
				Sleep(500);
			}
			else
			{
				goto_xy(mousex, mousey);
				printf(" sorry ");
				t = 0;
				Sleep(500);
			}
			if (t == 1)
			{
				goto_xy(40, 1);
				printf("hp=%d", hp);
				goto_xy(40, 2);
				printf("score=%d", score++);
			}
			else
			{
				goto_xy(40, 1);
				printf("hp=%d", hp--);
				goto_xy(40, 2);
				printf("score=%d", score);
			}
		}
		system("cls");
	}
	over(score);
	return 0;
}*/
//贪吃蛇
/*#include <stdio.h>
#include<stdlib.h>
#include<Windows.h>
#include<conio.h>
#define N 29//列
#define M 70//行
int a[N][M];
int X = 25, Y = 58;
void windows_begain()
{

}
void wall()//构建围墙
{
	int i, j;
	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			if (j == 0 || j == M - 1 || i == 0 || i == N - 1)
				a[i][j] = 1;
			else a[i][j] = 0;
		}
	}
}
void food_arise()
{
	int i, j;
	int t = 0;
	int m, n;
	for (i = 0; i < N; i++)
		for (j = 0; j < M; j++)
		{
			if (a[i][j] == 2)
				t = t + 1;
			else t = t;
		}
	if (t == 0)
	{
		do
		{
			n = rand() % N;
			m = rand() % M;
		} while (a[n][m] != 0);
		a[n][m] = 2;
	}
}
void printf_star()//打印
{
	int i, j;
	for (i = 0; i < N; i++)
	{
		for (j = 0; j < M; j++)
		{
			if (a[i][j] == 1)
				printf("+");
			if (a[i][j] == 0)
				printf(" ");
			if (a[i][j] == 2)
				printf("*");
		}
		printf("\n");
	}
}
double speed(double x)
{
	x = x / 1.001;
	return x;
}
void defeat()//结束判断
{
	void food_arise();
	void printf_star();
	double speed(double);
	int enter_char();
	double x = 500;
	int i = X, j = Y;
	int m = i, n = j + 1;
	int t = 2, k = 0, l = 0;
	int ch;
	int b[1450];
	do
	{
		food_arise();
		a[i][j] = 1;
		a[m][n] = 0;
		b[k] = t;
		printf_star();
		x = speed(x);
		Sleep(x);
		if (_kbhit())
		{
			ch = _getch();
			if (ch == 'w')
				t = 1;
			if (ch == 'a')
				t = 2;
			if (ch == 's')
				t = 3;
			if (ch == 'd')
				t = 4;
		}
		if (t == 1) i = i - 1;
		if (t == 2) j = j - 1;
		if (t == 3) i = i + 1;
		if (t == 4) j = j + 1;
		if (a[i][j] == 2)
			l = l - 1;
		else
		{
			if (b[l] == 1) m = m - 1;
			if (b[l] == 2) n = n - 1;
			if (b[l] == 3) m = m + 1;
			if (b[l] == 4) n = n + 1;
		}
		k++;
		l++;
		system("cls");
	} while (a[i][j] != 1);
}
void window_end()
{

}
int main()
{
	void windows_begain();//定义初始窗口
	void action_printf();//定义初始位置
	void dir(int, int, int);//判读蛇的前进方向
	void food_arise();//产生食物
	void defeat();//结束判断
	void wall();//构建围墙
	void printf_star();//打印
	void window_end();//定义结束窗口
	wall();
	defeat();
	printf_star();
	return 0;
}*/